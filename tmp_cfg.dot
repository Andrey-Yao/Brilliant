digraph {
fontname="Times"
fontsize="20"
penwidth=1
node[fontsize="16" shape="box" fontname="Times"]

subgraph cluster_0 {
label = "pack"
"_B1" [label=<<table cellspacing="0">
<tr><td bgcolor="Green">_B1</td></tr>
<tr><td>one: int = const 1</td></tr>
<tr><td>i: int = const 0</td></tr>
<tr><td>array: ptr[int] = alloc size</td></tr>
<tr><td>loc: ptr[int] = ptradd array i</td></tr>
<tr><td>store loc n1</td></tr>
<tr><td>i: int = add i one</td></tr>
<tr><td>loc: ptr[int] = ptradd array i</td></tr>
<tr><td>store loc n2</td></tr>
<tr><td>i: int = add i one</td></tr>
<tr><td>loc: ptr[int] = ptradd array i</td></tr>
<tr><td>store loc n3</td></tr>
<tr><td>i: int = add i one</td></tr>
<tr><td>loc: ptr[int] = ptradd array i</td></tr>
<tr><td>store loc n4</td></tr>
<tr><td>i: int = add i one</td></tr>
<tr><td>loc: ptr[int] = ptradd array i</td></tr>
<tr><td>store loc n5</td></tr>
<tr><td>ret array</td></tr>
</table>> shape="plaintext"];

}}
digraph {
fontname="Times"
fontsize="20"
penwidth=1
node[fontsize="16" shape="box" fontname="Times"]

subgraph cluster_0 {
label = "print_array"
"_B1" [label=<<table cellspacing="0">
<tr><td bgcolor="Green">_B1</td></tr>
<tr><td>i: int = const 0</td></tr>
<tr><td>one: int = const 1</td></tr>
</table>> shape="plaintext"];

"body" [label=<<table cellspacing="0">
<tr><td bgcolor="Green">body</td></tr>
<tr><td>body</td></tr>
<tr><td>loc: ptr[int] = ptradd array i</td></tr>
<tr><td>val: int = load loc</td></tr>
<tr><td>print val</td></tr>
</table>> shape="plaintext"];

"done" [label=<<table cellspacing="0">
<tr><td bgcolor="Green">done</td></tr>
<tr><td>done</td></tr>
<tr><td>ret</td></tr>
</table>> shape="plaintext"];

"loop" [label=<<table cellspacing="0">
<tr><td bgcolor="Green">loop</td></tr>
<tr><td>loop</td></tr>
<tr><td>cond: bool = lt i size</td></tr>
<tr><td>br cond body done</td></tr>
</table>> shape="plaintext"];

"loop_end" [label=<<table cellspacing="0">
<tr><td bgcolor="Green">loop_end</td></tr>
<tr><td>loop_end</td></tr>
<tr><td>i: int = add i one</td></tr>
<tr><td>jmp loop</td></tr>
</table>> shape="plaintext"];

"_B1" -> "loop" ;

"body" -> "loop_end" ;

"loop" -> "body" [color="blue"];

"loop" -> "done" [color="red"];

"loop_end" -> "loop" ;

}}
digraph {
fontname="Times"
fontsize="20"
penwidth=1
node[fontsize="16" shape="box" fontname="Times"]

subgraph cluster_0 {
label = "binary_search"
"_B1" [label=<<table cellspacing="0">
<tr><td bgcolor="Green">_B1</td></tr>
<tr><td>negone: int = const -1</td></tr>
<tr><td>zero: int = const 0</td></tr>
<tr><td>one: int = const 1</td></tr>
<tr><td>two: int = const 2</td></tr>
</table>> shape="plaintext"];

"body" [label=<<table cellspacing="0">
<tr><td bgcolor="Green">body</td></tr>
<tr><td>body</td></tr>
<tr><td>mid: int = add left right</td></tr>
<tr><td>mid: int = div mid two</td></tr>
</table>> shape="plaintext"];

"call_gt" [label=<<table cellspacing="0">
<tr><td bgcolor="Green">call_gt</td></tr>
<tr><td>call_gt</td></tr>
<tr><td>newleft: int = add left one</td></tr>
<tr><td>output: int = binary_search array target newleft right</td></tr>
<tr><td>ret output</td></tr>
</table>> shape="plaintext"];

"call_lt" [label=<<table cellspacing="0">
<tr><td bgcolor="Green">call_lt</td></tr>
<tr><td>call_lt</td></tr>
<tr><td>newright: int = sub right one</td></tr>
<tr><td>output: int = binary_search array target left newright</td></tr>
<tr><td>ret output</td></tr>
</table>> shape="plaintext"];

"check_equal" [label=<<table cellspacing="0">
<tr><td bgcolor="Green">check_equal</td></tr>
<tr><td>check_equal</td></tr>
<tr><td>midloc: ptr[int] = ptradd array mid</td></tr>
<tr><td>midval: int = load midloc</td></tr>
<tr><td>equal_cond: bool = eq target midval</td></tr>
<tr><td>br equal_cond found check_gt</td></tr>
</table>> shape="plaintext"];

"check_gt" [label=<<table cellspacing="0">
<tr><td bgcolor="Green">check_gt</td></tr>
<tr><td>check_gt</td></tr>
<tr><td>gt_cond: bool = gt target midval</td></tr>
<tr><td>br gt_cond call_gt call_lt</td></tr>
</table>> shape="plaintext"];

"check_valid" [label=<<table cellspacing="0">
<tr><td bgcolor="Green">check_valid</td></tr>
<tr><td>check_valid</td></tr>
<tr><td>end_cond: bool = gt left right</td></tr>
<tr><td>br end_cond end body</td></tr>
</table>> shape="plaintext"];

"end" [label=<<table cellspacing="0">
<tr><td bgcolor="Green">end</td></tr>
<tr><td>end</td></tr>
<tr><td>output: int = id negone</td></tr>
<tr><td>ret output</td></tr>
</table>> shape="plaintext"];

"found" [label=<<table cellspacing="0">
<tr><td bgcolor="Green">found</td></tr>
<tr><td>found</td></tr>
<tr><td>ret mid</td></tr>
</table>> shape="plaintext"];

"_B1" -> "check_valid" ;

"body" -> "check_equal" ;

"check_equal" -> "check_gt" [color="red"];

"check_equal" -> "found" [color="blue"];

"check_gt" -> "call_gt" [color="blue"];

"check_gt" -> "call_lt" [color="red"];

"check_valid" -> "body" [color="red"];

"check_valid" -> "end" [color="blue"];

}}
digraph {
fontname="Times"
fontsize="20"
penwidth=1
node[fontsize="16" shape="box" fontname="Times"]

subgraph cluster_0 {
label = "main"
"_B1" [label=<<table cellspacing="0">
<tr><td bgcolor="Green">_B1</td></tr>
<tr><td>target: int = const 7</td></tr>
<tr><td>size: int = const 5</td></tr>
<tr><td>e1: int = const 1</td></tr>
<tr><td>e2: int = const 2</td></tr>
<tr><td>e3: int = const 6</td></tr>
<tr><td>e4: int = const 7</td></tr>
<tr><td>e5: int = const 11</td></tr>
<tr><td>zero: int = const 0</td></tr>
<tr><td>four: int = const 4</td></tr>
<tr><td>array: ptr[int] = pack size e1 e2 e3 e4 e5</td></tr>
<tr><td>output: int = binary_search array target zero four</td></tr>
<tr><td>print output</td></tr>
<tr><td>free array</td></tr>
</table>> shape="plaintext"];

}}
